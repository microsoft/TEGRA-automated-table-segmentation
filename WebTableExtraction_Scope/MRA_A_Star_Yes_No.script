//Script GUID:e317a843-0503-4243-ae34-8dd50509f7a2
//Used for tracking history
#DECLARE all_parameters_1 string = @"MRA"+"__"+true+"__"+2+"__"+0+"__"+0+"__"+0.5+"__"+0.5+"__setting__yes";
#DECLARE all_parameters_2 string = @"MRA"+"__"+false+"__"+0+"__"+0+"__"+0+"__"+0.5+"__"+0.5+"__setting__yes";
#DECLARE all_parameters_3 string = @"MRA"+"__"+true+"__"+2+"__"+0+"__"+0+"__"+0.5+"__"+0.5+"__setting__no";
#DECLARE all_parameters_4 string = @"MRA"+"__"+false+"__"+0+"__"+0+"__"+0+"__"+0.5+"__"+0.5+"__setting__no";

#IF(LOCAL)
    #DECLARE input1 string  = @"D:\xuchu\TableStats\Enterprise_10k\Sequenceall_sequences_tabulars.txt";
    #DECLARE input2 string = @"D:\xuchu\TableStats\General_WebTablesCorpus_10k\Sequenceall_sequences_tabulars.txt";
    #DECLARE input3 string = @"D:\xuchu\TableStats\WebTablesCorpus_200k\Sequenceall_sequences_tabulars.txt";

    #DECLARE output1_1 string = @"D:\xuchu\TableStats\Enterprise_10k\" + @all_parameters_1 + @".txt";
    #DECLARE output2_1 string = @"D:\xuchu\TableStats\General_WebTablesCorpus_10k\" + @all_parameters_1 + @".txt";
    #DECLARE output3_1 string = @"D:\xuchu\TableStats\WebTablesCorpus_200k\" + @all_parameters_1 + @".txt";
    
   
    #DECLARE output1_2 string = @"D:\xuchu\TableStats\Enterprise_10k\" + @all_parameters_2 + @".txt";
    #DECLARE output2_2 string = @"D:\xuchu\TableStats\General_WebTablesCorpus_10k\" + @all_parameters_2 + @".txt";
    #DECLARE output3_2 string = @"D:\xuchu\TableStats\WebTablesCorpus_200k\" + @all_parameters_2 + @".txt";

    #DECLARE output1_3 string = @"D:\xuchu\TableStats\Enterprise_10k\" + @all_parameters_3 + @".txt";
    #DECLARE output2_3 string = @"D:\xuchu\TableStats\General_WebTablesCorpus_10k\" + @all_parameters_3 + @".txt";
    #DECLARE output3_3 string = @"D:\xuchu\TableStats\WebTablesCorpus_200k\" + @all_parameters_3 + @".txt";


    #DECLARE output1_4 string = @"D:\xuchu\TableStats\Enterprise_10k\" + @all_parameters_4 + @".txt";
    #DECLARE output2_4 string = @"D:\xuchu\TableStats\General_WebTablesCorpus_10k\" + @all_parameters_4 + @".txt";
    #DECLARE output3_4 string = @"D:\xuchu\TableStats\WebTablesCorpus_200k\" + @all_parameters_4 + @".txt";


    #DECLARE result_analysis string = @"D:\xuchu\TableStats\MRA_A_Star_yes_no.csv";


    #DECLARE singleCellOccurrenceFilePath string = @"D:\xuchu\TableStats\combined for yeye\singleCell_occur_combined.txt_numwildcardFalse_joined.txt";
    #DECLARE doubleCellOccurrenceFilepath string = @"D:\xuchu\TableStats\combined for yeye\doubleCell_occur_combined.txt_numwildcardFalse_joined.txt";
    #DECLARE singleCellLanguageModelFilePath string = @"D:\xuchu\TableStats\combined for yeye\singleCell_occur_combined.txt_language_model.txt";
    #DECLARE KBAttri2ValuesFilePath string = @"D:\xuchu\TableStats\combined for yeye\kb_attri_2_values.txt";
    #DECLARE KBValue2AttrisFilePath string = @"D:\xuchu\TableStats\combined for yeye\kb_value_2_attris.txt";



#ELSE
    #DECLARE input1 string = @"/my/Enterprise_10k/Sequenceall_sequences_tabulars.txt";
    #DECLARE input2 string = @"/my/General_WebTablesCorpus_10k/Sequenceall_sequences_tabulars.txt";
    #DECLARE input3 string = @"/my/WebTablesCorpus_200k/Sequenceall_sequences_tabulars.txt";


    #DECLARE output1_1 string = @"/my/Enterprise_10k/"+@all_parameters_1+@".txt";
    #DECLARE output2_1 string = @"/my/General_WebTablesCorpus_10k/"+@all_parameters_1+@".txt";
    #DECLARE output3_1 string = @"/my/WebTablesCorpus_200k/"+@all_parameters_1+@".txt";

    #DECLARE output1_2 string = @"/my/Enterprise_10k/"+@all_parameters_2+@".txt";
    #DECLARE output2_2 string = @"/my/General_WebTablesCorpus_10k/"+@all_parameters_2+@".txt";
    #DECLARE output3_2 string = @"/my/WebTablesCorpus_200k/"+@all_parameters_2+@".txt";

    #DECLARE output1_3 string = @"/my/Enterprise_10k/"+@all_parameters_3+@".txt";
    #DECLARE output2_3 string = @"/my/General_WebTablesCorpus_10k/"+@all_parameters_3+@".txt";
    #DECLARE output3_3 string = @"/my/WebTablesCorpus_200k/"+@all_parameters_3+@".txt";


    #DECLARE output1_4 string = @"/my/Enterprise_10k/"+@all_parameters_4+@".txt";
    #DECLARE output2_4 string = @"/my/General_WebTablesCorpus_10k/"+@all_parameters_4+@".txt";
    #DECLARE output3_4 string = @"/my/WebTablesCorpus_200k/"+@all_parameters_4+@".txt";


    #DECLARE result_analysis string = @"/my/MRA_A_Star_yes_no.csv";




/*
    #DECLARE singleCellOccurrenceFilePath string = @"/my/GlobalStats/singleCell_occur_combined.txt_numwildcardFalse_joined.txt";
    #DECLARE doubleCellOccurrenceFilepath_1 string = @"/my/GlobalStats/doubleCell_occur_combined.txt_numwildcardFalse_joined_1.txt";
    #DECLARE doubleCellOccurrenceFilepath_2 string = @"/my/GlobalStats/doubleCell_occur_combined.txt_numwildcardFalse_joined_2.txt";
    #DECLARE doubleCellOccurrenceFilepath string = @doubleCellOccurrenceFilepath_1+"\t"+@doubleCellOccurrenceFilepath_2;
    #DECLARE singleCellLanguageModelFilePath string = @"/my/GlobalStats/singleCell_occur_combined.txt_language_model.txt";
    RESOURCE @singleCellOccurrenceFilePath;
    RESOURCE @doubleCellOccurrenceFilepath_1;
    RESOURCE @doubleCellOccurrenceFilepath_2;
    RESOURCE @singleCellLanguageModelFilePath;
    #DECLARE KBAttri2ValuesFilePath string = @"/my/ScoringStats/kb_attri_2_values.txt";
    #DECLARE KBValue2AttrisFilePath string = @"/my/ScoringStats/kb_value_2_attris.txt";
    RESOURCE @KBAttri2ValuesFilePath;
    RESOURCE @KBValue2AttrisFilePath;
*/
    #DECLARE singleCellOccurrenceFilePath string = @"/my/GlobalStats/New/singleCell_occur_combined.txt_joined.txt";
    #DECLARE doubleCellOccurrenceFilepath string = @"/my/GlobalStats/New/doubleCell_occur_combined.txt_joined.txt";
    #DECLARE singleCellLanguageModelFilePath string = @"/my/GlobalStats/New/singleCell_occur_combined.txt_language_model.txt";
    #DECLARE KBAttri2ValuesFilePath string = @"/my/GlobalStats/New/kb_attri_2_values.txt";
    #DECLARE KBValue2AttrisFilePath string = @"/my/GlobalStats/New/kb_value_2_attris.txt";
    RESOURCE @singleCellOccurrenceFilePath;
    RESOURCE @doubleCellOccurrenceFilepath;
    RESOURCE @singleCellLanguageModelFilePath;
    RESOURCE  @KBAttri2ValuesFilePath;
    RESOURCE @KBValue2AttrisFilePath;
#ENDIF

//One setting
//Extract input and ground truth table
rs1_1 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input1
    USING DefaultTextExtractor();
rs2_1 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input2
    USING DefaultTextExtractor();
rs3_1 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input3
    USING DefaultTextExtractor();

//Process each line in the input table
rs1_final_1 =
    PROCESS rs1_1
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input1, @all_parameters_1, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs1_final_1
TO @output1_1;


rs2_final_1 =
    PROCESS rs2_1
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input2, @all_parameters_1, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs2_final_1
TO @output2_1;


rs3_final_1 =
    PROCESS rs3_1
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input3, @all_parameters_1, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs3_final_1
TO @output3_1;

//Result Analysis for each dataset
rs1_1_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs1_1;


rs1_final_1_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs1_final_1;


rs1_1_analysis =
    SELECT @input1 AS dataset,
           @all_parameters_1 AS setting,
           MyHelper.analyze(@input1, @all_parameters_1, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs1_1_stream
    CROSS JOIN rs1_final_1_stream;


rs2_1_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs2_1;


rs2_final_1_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs2_final_1;


rs2_1_analysis =
    SELECT @input2 AS dataset,
           @all_parameters_1 AS setting,
           MyHelper.analyze(@input2, @all_parameters_1, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs2_1_stream
    CROSS JOIN rs2_final_1_stream;




rs3_1_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs3_1;


rs3_final_1_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs3_final_1;


rs3_1_analysis =
    SELECT @input3 AS dataset,
           @all_parameters_1 AS setting,
           MyHelper.analyze(@input3, @all_parameters_1, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs3_1_stream
    CROSS JOIN rs3_final_1_stream;



//One setting
//Extract input and ground truth table
rs1_2 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input1
    USING DefaultTextExtractor();
rs2_2 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input2
    USING DefaultTextExtractor();
rs3_2 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input3
    USING DefaultTextExtractor();

//Process each line in the input table
rs1_final_2 =
    PROCESS rs1_2
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input1, @all_parameters_2, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs1_final_2
TO @output1_2;


rs2_final_2 =
    PROCESS rs2_2
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input2, @all_parameters_2, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs2_final_2
TO @output2_2;


rs3_final_2 =
    PROCESS rs3_2
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input3, @all_parameters_2, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs3_final_2
TO @output3_2;

//Result Analysis for each dataset
rs1_2_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs1_2;


rs1_final_2_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs1_final_2;


rs1_2_analysis =
    SELECT @input1 AS dataset,
           @all_parameters_2 AS setting,
           MyHelper.analyze(@input1, @all_parameters_2, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs1_2_stream
    CROSS JOIN rs1_final_2_stream;


rs2_2_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs2_2;


rs2_final_2_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs2_final_2;


rs2_2_analysis =
    SELECT @input2 AS dataset,
           @all_parameters_2 AS setting,
           MyHelper.analyze(@input2, @all_parameters_2, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs2_2_stream
    CROSS JOIN rs2_final_2_stream;




rs3_2_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs3_2;


rs3_final_2_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs3_final_2;


rs3_2_analysis =
    SELECT @input3 AS dataset,
           @all_parameters_2 AS setting,
           MyHelper.analyze(@input3, @all_parameters_2, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs3_2_stream
    CROSS JOIN rs3_final_2_stream;


//One setting
//Extract input and ground truth table
rs1_3 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input1
    USING DefaultTextExtractor();
rs2_3 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input2
    USING DefaultTextExtractor();
rs3_3 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input3
    USING DefaultTextExtractor();

//Process each line in the input table
rs1_final_3 =
    PROCESS rs1_3
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input1, @all_parameters_3, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs1_final_3
TO @output1_3;


rs2_final_3 =
    PROCESS rs2_3
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input2, @all_parameters_3, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs2_final_3
TO @output2_3;


rs3_final_3 =
    PROCESS rs3_3
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input3, @all_parameters_3, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs3_final_3
TO @output3_3;

//Result Analysis for each dataset
rs1_3_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs1_3;


rs1_final_3_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs1_final_3;


rs1_3_analysis =
    SELECT @input1 AS dataset,
           @all_parameters_3 AS setting,
           MyHelper.analyze(@input1, @all_parameters_3, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs1_3_stream
    CROSS JOIN rs1_final_3_stream;


rs2_3_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs2_3;


rs2_final_3_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs2_final_3;


rs2_3_analysis =
    SELECT @input2 AS dataset,
           @all_parameters_3 AS setting,
           MyHelper.analyze(@input2, @all_parameters_3, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs2_3_stream
    CROSS JOIN rs2_final_3_stream;




rs3_3_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs3_3;


rs3_final_3_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs3_final_3;


rs3_3_analysis =
    SELECT @input3 AS dataset,
           @all_parameters_3 AS setting,
           MyHelper.analyze(@input3, @all_parameters_3, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs3_3_stream
    CROSS JOIN rs3_final_3_stream;


//One setting
//Extract input and ground truth table
rs1_4 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input1
    USING DefaultTextExtractor();
rs2_4 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input2
    USING DefaultTextExtractor();
rs3_4 =
    EXTRACT table_name : string,
            input_table_line : string,
            ground_table_line : string
    FROM @input3
    USING DefaultTextExtractor();

//Process each line in the input table
rs1_final_4 =
    PROCESS rs1_4
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input1, @all_parameters_4, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs1_final_4
TO @output1_4;


rs2_final_4 =
    PROCESS rs2_4
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input2, @all_parameters_4, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs2_final_4
TO @output2_4;


rs3_final_4 =
    PROCESS rs3_4
    PRODUCE table_name,
            alignedTable
    USING HighParallelProcessor(@input3, @all_parameters_4, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath, @KBAttri2ValuesFilePath, @KBValue2AttrisFilePath);

OUTPUT rs3_final_4
TO @output3_4;

//Result Analysis for each dataset
rs1_4_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs1_4;


rs1_final_4_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs1_final_4;


rs1_4_analysis =
    SELECT @input1 AS dataset,
           @all_parameters_4 AS setting,
           MyHelper.analyze(@input1, @all_parameters_4, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs1_4_stream
    CROSS JOIN rs1_final_4_stream;


rs2_4_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs2_4;


rs2_final_4_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs2_final_4;


rs2_4_analysis =
    SELECT @input2 AS dataset,
           @all_parameters_4 AS setting,
           MyHelper.analyze(@input2, @all_parameters_4, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs2_4_stream
    CROSS JOIN rs2_final_4_stream;




rs3_4_stream =
    SELECT MyCombine(table_name, ground_table_line) AS dataset_ground_line
    FROM rs3_4;


rs3_final_4_stream =
    SELECT MyCombine(table_name, alignedTable) AS dataset_aligned_line
    FROM rs3_final_4;


rs3_4_analysis =
    SELECT @input3 AS dataset,
           @all_parameters_4 AS setting,
           MyHelper.analyze(@input3, @all_parameters_4, dataset_ground_line, dataset_aligned_line, @singleCellOccurrenceFilePath, @doubleCellOccurrenceFilepath, @singleCellLanguageModelFilePath) AS log
    FROM rs3_4_stream
    CROSS JOIN rs3_final_4_stream;


//Union all results
all_analysis =
    SELECT *
    FROM rs1_1_analysis
    UNION
    SELECT *
    FROM rs2_1_analysis
    UNION
    SELECT *
    FROM rs3_1_analysis
    
    UNION
    SELECT *
    FROM rs1_2_analysis
    UNION
    SELECT *
    FROM rs2_2_analysis
    UNION
    SELECT *
    FROM rs3_2_analysis

    UNION
    SELECT *
    FROM rs1_3_analysis
    UNION
    SELECT *
    FROM rs2_3_analysis
    UNION
    SELECT *
    FROM rs3_3_analysis


    UNION
    SELECT *
    FROM rs1_4_analysis
    UNION
    SELECT *
    FROM rs2_4_analysis
    UNION
    SELECT *
    FROM rs3_4_analysis;


OUTPUT all_analysis
TO @result_analysis;